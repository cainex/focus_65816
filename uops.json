{
	"uops" : [
		{
			"uop" : "ADC",
			"in" : ["a", "o", "c"],
			"op" : "r = a + o + c;",
			"out" : {
				"a" : "r",
				"n" : "get_n(r)",
				"v" : "(a ^ r) & (o ^ r) & 0x8000 ? m_reg->setV() : m_reg->clrV()",
				"c" : "get_c(r)"
			}
		},
		{
			"uop" : "AND",
			"in" : ["a", "o"],
			"op" : "r = a & o;",
			"out" : {
				"a" : "r",
				"n" : "get_n(r)",
				"z" : "get_z(r)"
			}
		},
		{
			"uop" : "ASL",
			"in"  : ["o"],
			"op" : "r = o << 1;",
			"out" : {
				"o": "r",
				"c" : "get_c(r)"
			}
		},
		{
			"uop" : "BCC",
			"in" : ["o", "c", "pc"],
			"op" : "if (o == 0) ? r = pc : r = pc + o;",
			"out" : {
				"pc" : "r"
			}
		},
		{
			"uop" : "BCS",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BEQ",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BIT",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BMI",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BNE",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BPL",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BRA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BRK",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BRL",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BVC",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "BVS",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "CLC",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "CLD",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "CLI",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "CLV",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "CMP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "COP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "CPX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "CPY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "DEC",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "DEX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "DEY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "EOR",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "INC",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "INX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "INY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "JML",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "JMP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "JSL",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "JSR",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "LDA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "LDX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "LDY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "LSR",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "MVN",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "MVP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "NOP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "ORA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PEA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PEI",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PER",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PHA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PHB",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PHD",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PHK",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PHP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PHX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PHY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PLA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PLB",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PLD",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PLP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PLX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "PLY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "REP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "ROL",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "ROR",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "RTI",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "RTL",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "RTS",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "SBC",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "SEC",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "SED",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "SEI",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "SEP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "STA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "STP",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "STX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "STY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "STZ",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TAX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TAY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TCD",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TCS",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TDC",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TRB",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TSB",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TSC",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TSX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TXA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TXS",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TXY",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TYA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "TYX",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "WAI",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "WDM",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "XBA",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		},
		{
			"uop" : "XCE",
			"in" : ["o"],
			"op" : "assert(0);",
			"out" : {
	
			}
		}
	
	]
}
